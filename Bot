// ==UserScript==
// @name             Nitro Type Bot 2.0
// @match            https://www.nitrotype.com/race
// @match            https://www.nitrotype.com/race/*
// @author           Wildflower
// @run-at           document-start
// @grant            none
// @version          2.0
// ==/UserScript==
var wpm = 90;
var accuracy = 97;
const sockets = [];
const nativeWebSocket = window.WebSocket;
window.WebSocket = function(...args){
  const socket = new nativeWebSocket(...args);
  sockets.push(socket);
  return socket;
};

async function sleep(s) {
  var ms = s*1000;
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function main() {
    const socket = new nativeWebSocket('ws://race.nitrotype.com/race');
    sockets.push(socket);
  
    socket.addEventListener('message', async event => {
        console.log('Message from server ', event.data);
        var message = event.data;
        var typingText = scanForText(message);
        if (!typingText) return;
        await type(typingText, wpm, accuracy);
    });
}

async function type(msg, speed, accuracy, nitros='true') {
    function randrange(min, max) {
        return Math.floor(Math.random() * (max - min) ) + min;
    }
    var delay1 = randrange(7, 9) / 10
    var delay2 = randrange(11, 14) / 10
    var sleepTime = 60 / (speed * 5);
    var sleep1 = (sleepTime * delay1) * 10000000;
    var sleep2 = (sleepTime * delay2) * 10000000;

    if(nitros == 'true'){
        var usedNitro = false;
    } else if (nitros == 'random') {
        var check = randrange(1,3);
        if(check == 1) {
            usedNitro = false;
        } else {
            usedNitro = true;
        }
    } else {
        usedNitro = true;
    }
    await sleep(4.3);
    socket.send('4{"stream":"race","msg":"update","payload":{"t":1,"f":0}}');

    var t = 2;
    var e = 1;
    for (var i = 0; i < msg
